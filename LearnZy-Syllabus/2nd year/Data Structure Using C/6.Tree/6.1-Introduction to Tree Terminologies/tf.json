[
    {
      "id": 1,
      "question": "A tree is a linear data structure.",
      "answer": false
    },
    {
      "id": 2,
      "question": "A node in a tree can have multiple parent nodes.",
      "answer": false
    },
    {
      "id": 3,
      "question": "The root node of a tree has no parent.",
      "answer": true
    },
    {
      "id": 4,
      "question": "The depth of a node is measured from the root node.",
      "answer": true
    },
    {
      "id": 5,
      "question": "A leaf node has at least one child node.",
      "answer": false
    },
    {
      "id": 6,
      "question": "The degree of a node refers to the number of children it has.",
      "answer": true
    },
    {
      "id": 7,
      "question": "A binary tree is a tree where each node can have at most two children.",
      "answer": true
    },
    {
      "id": 8,
      "question": "The level of the root node in a tree is always 1.",
      "answer": false
    },
    {
      "id": 9,
      "question": "An internal node in a tree has at least one child.",
      "answer": true
    },
    {
      "id": 10,
      "question": "In a tree, siblings are nodes that share the same parent.",
      "answer": true
    },
    {
      "id": 11,
      "question": "The height of a tree is the longest path from the root to a leaf node.",
      "answer": true
    },
    {
      "id": 12,
      "question": "A tree with only one node has a height of 1.",
      "answer": false
    },
    {
      "id": 13,
      "question": "A node with no outgoing edges is called an ancestor.",
      "answer": false
    },
    {
      "id": 14,
      "question": "A path in a tree is a sequence of edges between two nodes.",
      "answer": true
    },
    {
      "id": 15,
      "question": "The root node of a tree is always at the highest level.",
      "answer": false
    },
    {
      "id": 16,
      "question": "An ancestor of a node is any node that appears on the path from that node to the root.",
      "answer": true
    },
    {
      "id": 17,
      "question": "A descendant of a node is any node that appears on the path from that node to the leaf nodes.",
      "answer": true
    },
    {
      "id": 18,
      "question": "A full binary tree is a tree in which every node has either 0 or 2 children.",
      "answer": true
    },
    {
      "id": 19,
      "question": "The depth of a tree is the longest path from the root to any node.",
      "answer": false
    },
    {
      "id": 20,
      "question": "A binary tree can have more than two children per node.",
      "answer": false
    },
    {
      "id": 21,
      "question": "In a tree, every node except the root has exactly one parent.",
      "answer": true
    },
    {
      "id": 22,
      "question": "A complete binary tree has all levels filled except possibly the last level.",
      "answer": true
    },
    {
      "id": 23,
      "question": "In a tree, a node can have multiple levels.",
      "answer": false
    },
    {
      "id": 24,
      "question": "A balanced tree is one where the height difference between left and right subtrees is at most 1.",
      "answer": true
    },
    {
      "id": 25,
      "question": "A tree cannot have cycles.",
      "answer": true
    },
    {
      "id": 26,
      "question": "The number of edges in a tree with N nodes is N+1.",
      "answer": false
    },
    {
      "id": 27,
      "question": "A tree with N nodes always has N-1 edges.",
      "answer": true
    },
    {
      "id": 28,
      "question": "The in-degree of a node is the number of edges coming into it.",
      "answer": true
    },
    {
      "id": 29,
      "question": "A node in a tree cannot have both parent and child nodes.",
      "answer": false
    },
    {
      "id": 30,
      "question": "The number of leaf nodes in a tree is always greater than the number of internal nodes.",
      "answer": false
    }
  ]
  