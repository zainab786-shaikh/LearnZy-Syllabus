[
    {
      "id": 1,
      "question": "Linear Search checks each element one by one until the target is found.",
      "answer": true
    },
    {
      "id": 2,
      "question": "Binary Search can be applied to unsorted arrays.",
      "answer": false
    },
    {
      "id": 3,
      "question": "The time complexity of Linear Search in the worst case is O(n).",
      "answer": true
    },
    {
      "id": 4,
      "question": "Binary Search follows the Divide and Conquer strategy.",
      "answer": true
    },
    {
      "id": 5,
      "question": "Binary Search is always faster than Linear Search.",
      "answer": false
    },
    {
      "id": 6,
      "question": "Linear Search is more efficient than Binary Search for large datasets.",
      "answer": false
    },
    {
      "id": 7,
      "question": "If the array is unsorted, Linear Search is the better option.",
      "answer": true
    },
    {
      "id": 8,
      "question": "In Binary Search, we always start searching from the middle of the array.",
      "answer": true
    },
    {
      "id": 9,
      "question": "The worst-case time complexity of Binary Search is O(log n).",
      "answer": true
    },
    {
      "id": 10,
      "question": "If the target element is not in the array, Linear Search will return -1.",
      "answer": true
    },
    {
      "id": 11,
      "question": "Binary Search can be used on a dataset that is sorted in descending order.",
      "answer": true
    },
    {
      "id": 12,
      "question": "Linear Search requires the array to be sorted before searching.",
      "answer": false
    },
    {
      "id": 13,
      "question": "Binary Search requires an additional data structure to work.",
      "answer": false
    },
    {
      "id": 14,
      "question": "Binary Search is useful for large datasets that are sorted.",
      "answer": true
    },
    {
      "id": 15,
      "question": "Linear Search is also known as Sequential Search.",
      "answer": true
    },
    {
      "id": 16,
      "question": "Binary Search works by checking every element one by one.",
      "answer": false
    },
    {
      "id": 17,
      "question": "In Binary Search, if the middle element is the target, we return its position.",
      "answer": true
    },
    {
      "id": 18,
      "question": "Binary Search eliminates half of the remaining elements in each step.",
      "answer": true
    },
    {
      "id": 19,
      "question": "The best case time complexity of Binary Search is O(1).",
      "answer": true
    },
    {
      "id": 20,
      "question": "Linear Search is not useful when dealing with small datasets.",
      "answer": false
    },
    {
      "id": 21,
      "question": "Binary Search can be implemented using both iterative and recursive approaches.",
      "answer": true
    },
    {
      "id": 22,
      "question": "If the middle element is smaller than the target, Binary Search continues in the left half.",
      "answer": false
    },
    {
      "id": 23,
      "question": "In Linear Search, if the first element is the target, only one comparison is needed.",
      "answer": true
    },
    {
      "id": 24,
      "question": "Binary Search is a good option for searching in an unordered linked list.",
      "answer": false
    },
    {
      "id": 25,
      "question": "The efficiency of Linear Search remains the same regardless of the array size.",
      "answer": false
    },
    {
      "id": 26,
      "question": "Binary Search requires more memory compared to Linear Search.",
      "answer": false
    },
    {
      "id": 27,
      "question": "If an array has 1,000 elements, Binary Search will take at most 10 comparisons in the worst case.",
      "answer": true
    },
    {
      "id": 28,
      "question": "Linear Search is preferred when the dataset size is small.",
      "answer": true
    },
    {
      "id": 29,
      "question": "Binary Search is not useful if the dataset is dynamic and frequently changing.",
      "answer": true
    },
    {
      "id": 30,
      "question": "Binary Search is slower than Linear Search for searching in an already sorted array.",
      "answer": false
    },
    {
      "id": 31,
      "question": "If Binary Search fails to find an element, it returns -1.",
      "answer": true
    },
    {
      "id": 32,
      "question": "Linear Search is also known as Binary Search.",
      "answer": false
    },
    {
      "id": 33,
      "question": "Linear Search requires a sorted array.",
      "answer": false
    },
    {
      "id": 34,
      "question": "The average-case time complexity of Linear Search is O(n).",
      "answer": true
    },
    {
      "id": 35,
      "question": "Binary Search is an example of an iterative algorithm.",
      "answer": true
    },
    {
      "id": 36,
      "question": "Binary Search works only on integer arrays.",
      "answer": false
    },
    {
      "id": 37,
      "question": "Linear Search performs well when the target element is frequently at the beginning of the list.",
      "answer": true
    },
    {
      "id": 38,
      "question": "Binary Search works by eliminating half of the search space in each step.",
      "answer": true
    },
    {
      "id": 39,
      "question": "Binary Search performs better on small datasets compared to Linear Search.",
      "answer": false
    },
    {
      "id": 40,
      "question": "Binary Search works well on both sorted and unsorted datasets.",
      "answer": false
    },
    {
      "id": 41,
      "question": "Binary Search has a time complexity of O(n^2).",
      "answer": false
    },
    {
      "id": 42,
      "question": "If the target is not found in Binary Search, the search continues indefinitely.",
      "answer": false
    },
    {
      "id": 43,
      "question": "Binary Search is a recursive algorithm by default.",
      "answer": false
    },
    {
      "id": 44,
      "question": "A sorted linked list can use Binary Search for efficient searching.",
      "answer": false
    },
    {
      "id": 45,
      "question": "Linear Search is better than Binary Search in terms of speed for large sorted datasets.",
      "answer": false
    },
    {
      "id": 46,
      "question": "Binary Search is more efficient than Linear Search for searching large sorted datasets.",
      "answer": true
    },
    {
      "id": 47,
      "question": "The best case for Linear Search occurs when the target element is at the end of the array.",
      "answer": false
    },
    {
      "id": 48,
      "question": "Binary Search always requires a recursion stack.",
      "answer": false
    },
    {
      "id": 49,
      "question": "Binary Search works on character arrays as well as numeric arrays.",
      "answer": true
    },
    {
      "id": 50,
      "question": "Linear Search is a brute force algorithm.",
      "answer": true
    }
  ]  